name: photobooth-api
base: core24
version: '0.1'
summary: A RESTful API for the photobooth application
description: |
  A RESTful Flask API for managing photo uploads, storage, and retrieval.
  This API provides comprehensive photo management functionality including
  file uploads, metadata storage, search capabilities, and CRUD operations.

grade: devel
confinement: strict

layout:
  /etc/nginx:
    bind: $SNAP/etc/nginx

parts:
  frontend:
    plugin: npm
    source: react_frontend
    npm-node-version: "20.10.0"
    override-build: |
      set -eux
      npm run build
      mkdir -p $CRAFT_PART_INSTALL/
      mv build/* $CRAFT_PART_INSTALL/
  api:
    plugin: python
    source: .
    after: [frontend]
    python-requirements: [requirements.txt]
    stage-packages:
      - nginx
    override-build: |
      set -eux
      craftctl default
      mkdir -p $CRAFT_PART_INSTALL/bin
      mkdir -p $CRAFT_PART_INSTALL/www
      cp -r $CRAFT_PROJECT_DIR/parts/frontend/install/* $CRAFT_PART_INSTALL/www/
      cp run-*.sh $CRAFT_PART_INSTALL/bin/
      cp api.py $CRAFT_PART_INSTALL/
      chmod +x $CRAFT_PART_INSTALL/bin/run-*.sh
      rm -f $CRAFT_PART_INSTALL/etc/nginx/sites-enabled/default
      # nginx.conf is in the part's source directory
      cp $CRAFT_PART_SRC/nginx.conf $CRAFT_PART_INSTALL/etc/nginx/sites-available/photobooth-api
      ln -s ../sites-available/photobooth-api $CRAFT_PART_INSTALL/etc/nginx/sites-enabled/photobooth-api
      sed -i -e 's|/var/log/nginx/error.log|/var/snap/photobooth-api/common/nginx-error.log|g' $CRAFT_PART_INSTALL/etc/nginx/nginx.conf
      sed -i -e 's|/var/log/nginx/access.log|/var/snap/photobooth-api/common/nginx-access.log|g' $CRAFT_PART_INSTALL/etc/nginx/nginx.conf
      sed -i -e 's|/run/nginx.pid|/var/snap/photobooth-api/common/nginx.pid|g' $CRAFT_PART_INSTALL/etc/nginx/nginx.conf
      sed -i -e 's|www-data|root|g' $CRAFT_PART_INSTALL/etc/nginx/nginx.conf

apps:
  api:
    command: bin/run-gunicorn.sh
    daemon: simple
    plugs: [network, network-bind]

  frontend:
    command: bin/run-nginx.sh
    daemon: simple
    plugs: [network, network-bind]
